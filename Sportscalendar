package com.example.sportscalendar;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;

public class MainActivity extends AppCompatActivity {

    private ArrayList<SportEvent> events = new ArrayList<>();
    private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");

    private EditText eventNameInput, eventDateInput, eventTimeInput, searchDateInput;
    private TextView eventResultTextView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        eventNameInput = findViewById(R.id.eventNameInput);
        eventDateInput = findViewById(R.id.eventDateInput);
        eventTimeInput = findViewById(R.id.eventTimeInput);
        searchDateInput = findViewById(R.id.searchDateInput);
        eventResultTextView = findViewById(R.id.eventResultTextView);

        Button addEventButton = findViewById(R.id.addEventButton);
        Button removeEventButton = findViewById(R.id.removeEventButton);
        Button searchEventButton = findViewById(R.id.searchEventButton);

        addEventButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                addEvent();
            }
        });

        removeEventButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                removeEvent();
            }
        });

        searchEventButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                searchEventsByDate();
            }
        });
    }

    private void addEvent() {
        String name = eventNameInput.getText().toString();
        String date = eventDateInput.getText().toString();
        String time = eventTimeInput.getText().toString();

        try {
            Date eventDate = dateFormat.parse(date + " " + time);
            events.add(new SportEvent(name, eventDate));
            eventResultTextView.setText("Событие добавлено: " + name);
        } catch (ParseException e) {
            eventResultTextView.setText("Ошибка: неправильный формат даты или времени");
        }
    }

    private void removeEvent() {
        String name = eventNameInput.getText().toString();
        boolean found = false;

        for (int i = 0; i < events.size(); i++) {
            if (events.get(i).getName().equalsIgnoreCase(name)) {
                events.remove(i);
                eventResultTextView.setText("Событие удалено: " + name);
                found = true;
                break;
            }
        }

        if (!found) {
            eventResultTextView.setText("Событие не найдено: " + name);
        }
    }

    private void searchEventsByDate() {
        String date = searchDateInput.getText().toString();
        ArrayList<SportEvent> foundEvents = new ArrayList<>();

        try {
            Date searchDate = dateFormat.parse(date + " 00:00");

            for (SportEvent event : events) {
                if (isSameDay(searchDate, event.getDate())) {
                    foundEvents.add(event);
                }
            }

            if (foundEvents.isEmpty()) {
                eventResultTextView.setText("На указанную дату событий нет.");
            } else {
                Collections.sort(foundEvents, new Comparator<SportEvent>() {
                    @Override
                    public int compare(SportEvent e1, SportEvent e2) {
                        return e1.getDate().compareTo(e2.getDate());
                    }
                });

                StringBuilder result = new StringBuilder("События на дату " + date + ":\n");
                for (SportEvent event : foundEvents) {
                    result.append(event.getName()).append(" - ").append(dateFormat.format(event.getDate())).append("\n");
                }
                eventResultTextView.setText(result.toString());
            }
        } catch (ParseException e) {
            eventResultTextView.setText("Ошибка: неправильный формат даты");
        }
    }
    
    private boolean isSameDay(Date date1, Date date2) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        return sdf.format(date1).equals(sdf.format(date2));
    }
}

class SportEvent {
    private String name;
    private Date date;

    public SportEvent(String name, Date date) {
        this.name = name;
        this.date = date;
    }

    public String getName() {
        return name;
    }

    public Date getDate() {
        return date;
    }
}
